import { MainPage } from "main.slint";
import { MainLogic, SettingsLogic, DisplayMod } from "common.slint";
import { StandardButton } from "std-widgets.slint";

export { MainLogic, SettingsLogic, DisplayMod }

export component App inherits Window {
    property <bool> popup_window_visible: false;
    in property <string> err-message;
    title: @tr("Elden Mod Loader");
    preferred-height: 370px;
    min-height: 270px;
    width: 315px;
    
    mp := MainPage {}

    callback show_error_popup;
    show_error_popup => { 
        popup_window_visible = true;
        err-popup.show()
    }
    callback focus_app;
    focus_app => { fs.focus() }

    // Make popupWindow look nice 
    err_popup := PopupWindow {
        x: root.width / 2.7;
        y: root.height / 2.7;
        width: min(err_popup_layout.preferred-width, root.width - 80px);
        close-on-click: false;

        Rectangle {
            background: root.background;
            border-color: err_popup_text.color;
            border-width: 1px;
        }

        err_popup_layout := Dialog {
            no-frame: false;
            title: @tr("Error");
            height:100%; width: 100%;

            err_popup_text := Text {
                text: root.err-message;
                wrap: word-wrap;
            }

            StandardButton { kind: ok; clicked => { 
                popup_window_visible = false;
                err-popup.close()
             } }
        }
    }
    fs := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.Escape) {
                if (popup_window_visible) {
                    popup_window_visible = false;
                    err-popup.close()
                } else {
                    MainLogic.current-subpage = 0
                }
            }
            if (event.text == Key.Tab) {
                mp.focus_line_edit()
            }
            accept
        }
    }
}