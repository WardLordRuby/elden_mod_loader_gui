import { GroupBox, Button, ScrollView, StandardButton, HorizontalBox } from "std-widgets.slint";
import { MainLogic, SettingsLogic, Page, ColorPalette } from "common.slint";

export component ModDetailsPage inherits Page {
    has-back-button: true;
    title: MainLogic.current_mods[mod-index].name;
    description: @tr("Edit registered mods here");
    
    in property <int> mod-index;
    property <length> box-width: root.width - 10px;
    property <color> state-color: SettingsLogic.loader_disabled ? #d01616 : 
        MainLogic.current_mods[mod-index].enabled ? #206816 : #d01616;
    property <string> state: SettingsLogic.loader_disabled ? @tr("Mod Loader Disabled") : 
        MainLogic.current_mods[mod-index].enabled ? @tr("Yes") : @tr("No");
    property <length> button-width: MainLogic.current_mods[mod-index].has-config ? 93px : 105px;
    property <LayoutAlignment> button-layout: MainLogic.current_mods[mod-index].has-config ? center : end;
    
    Text {
        x: 8px;
        y: 39px;
        font-size: 14pt;
        text: @tr("Details");
    }

    details := VerticalLayout {
        y: 60px;
        height: root.height - edit-mod-box.height - 55px;
        padding-top: 4px;
        padding-left: 12px;
        padding-right: 12px;
        alignment: start;
        a := Text {
            font-size: 10pt;
            text: @tr("Enabled:");
        }
        b := HorizontalLayout {
            padding-left: 8px;
            padding-top: 3px;
            padding-bottom: 3px;
            Text {
                font-size: 16pt;
                color: state-color;
                text: state;
            }
        }
        c := Text {
            font-size: 10pt;
            text: @tr("Name:");
        }
        d := HorizontalLayout {
            padding-left: 8px;
            padding-top: 3px;
            padding-bottom: 3px;
            Text {
                font-size: 13pt;
                wrap: word-wrap;
                text: MainLogic.current_mods[mod-index].name;
            }
        }
        e := Text {
            font-size: 10pt;
            text: @tr("Files:");
        }


    }
    ScrollView {
        y: details.y + a.height + b.height + c.height + d.height + e.height + 5px;
        height: root.height - self.y - edit-mod-box.height;
        viewport-height: files-txt.height;
        width: box-width;
        files-txt := Text {
            x: 15px;
            font-size: 13pt;
            wrap: word-wrap;
            text: MainLogic.current_mods[mod-index].files;
        }
    }
    VerticalLayout {
        y: root.height - edit-mod-box.height;
        height: root.height - self.y;
        padding-left: 8px;
        alignment: end;

        edit-mod-box := GroupBox {
            title: @tr("Edit Mod");
            height: 95px;
            HorizontalLayout {
                width: box-width;
                spacing: 7px;
                padding-right: 8px;
                padding-bottom: 2px;
                alignment: button-layout;
                Button {
                    width: button-width;
                    height: 35px;
                    primary: !SettingsLogic.dark_mode;
                    text: @tr("Add Files");
                    clicked => { MainLogic.add_to_mod(MainLogic.current_mods[mod-index].name) }
                }
                if (MainLogic.current_mods[mod-index].has-config) : Button {
                    width: button-width;
                    height: 35px;
                    primary: !SettingsLogic.dark_mode;
                    text: @tr("Edit config");
                    clicked => { MainLogic.edit_config(MainLogic.current_mods[mod-index].config-files) }
                }
                Button {
                    width: button-width;
                    height: 35px;
                    primary: !SettingsLogic.dark_mode;
                    text: @tr("De-register");
                    clicked => {
                        MainLogic.popup_window_visible = true;
                        confirm-popup.show()
                    }
                }
            }
        }
    }
    // Make popupWindow look nice 
    confirm_popup := PopupWindow {
        x: 22px;
        y: root.height / 2.7;
        height: confirm-popup-text.height + 20px;
        width: confirm-popup-text.width + 20px;
        close-on-click: false;

        Rectangle {
            background: ColorPalette.popup-background-color;
            border-color: ColorPalette.popup-border-color;
            border-width: 1px;
        }

        confirm_popup_layout := Dialog {
            no-frame: false;
            title: @tr("Confirm");
            
            confirm_popup_text := Text {
                text: @tr("Are you sure you want to de-register this mod?");
                max-width: root.width - 20px;
                wrap: word-wrap;
            }
            StandardButton {
                kind: ok; 
                clicked => { 
                    MainLogic.popup_window_visible = false;
                    MainLogic.remove_mod(MainLogic.current_mods[mod-index].name);
                    confirm-popup.close()
                }
            }
            StandardButton {
                kind: cancel; 
                clicked => { 
                    MainLogic.popup_window_visible = false;
                    confirm-popup.close()
                }
            }
        }
    }
}